<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="FrontTactilTouched desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="Socket Server" id="1" localization="8" tooltip="" x="503" y="52"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer
import json
import urlparse
import os
import urllib2
import hashlib


class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.dialog = ALProxy('ALDialog')
        self.memory = ALProxy('ALMemory')
        self.pckman = ALProxy('PackageManager')
        self.last_output = ""
        self.last_valid_output = ""

        def generatePSK(self):
           letters = string.ascii_lowercase
           return ''.join(random.choice(letters) for i in range(15))

        def hashPSK(self, psk):
            salt = 'HcU8jhcPFG'
            psk = psk + salt
            hashed_psk = hashlib.sha256(psk).hexdigest()
            return hashed_psk

        def check_PSK(key,id):
            #Find Pepper Entity
            base_key = self.memory.getData('app/peppersecuritykey')

            next_base_key = hashPSK(base_key)

            if next_cloud_key == key:
                self.memory.insertData('app/peppersecuritykey',next_base_key)
                return True
            else:
                return False

        #get packageinfolist and get name for each package
        packagelist = self.pckman.packages2()
        self.logger.debug(packagelist[7])
        self.packagenames = []
        for package in packagelist:
            for item in package:
                if item[0] == 'elems':
                    for elems in item:
                        for elemitem in elems:
                            if elemitem[0] == 'names':
                                inneritem = elemitem[1]
                                for nameselem in inneritem:
                                    if nameselem[0] == 'en_US':
                                        self.packagenames.append(nameselem[1])
        self.logger.debug(self.packagenames)
        self.memory.insertData('InstalledPackages',self.packagenames)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #server.shutdown
        #self.server.socket.close()
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box

        class handleHTTPRequest(BaseHTTPRequestHandler):


            def do_POST(s):
                self.logger.info('David')
                request_path = s.path
                request_headers = s.headers
                path = urlparse.urlparse(request_path).path
                content_length = int(s.headers.getheader('content-length',0))
                file_content = s.rfile.read(content_length)
                self.logger.info(file_content)
                #response = urllib2.Request(answer)
                if path == '/startgame':

                    self.logger.info("file content = " + file_content)
                    game_info = json.loads(file_content)
                    #self.logger.info("game_info = " + game_info)
                    hint = game_info['hint']
                    word = game_info['word']
                    self.logger.info("extracted word and hint")
                    android_username = game_info['android_username']
                    #save info in ALmemory
                    self.logger.info('hint = ' + str(hint))
                    self.logger.info('word = ' + str(word))
                    self.logger.info('username = ' + str(android_username))
                    self.memory.raiseEvent("app/incoming_game_request", "1")
                    self.memory.raiseEvent("app/game_mode", "1")
                    self.memory.raiseEvent("app/hangman_android_user", str(android_username))
                    self.memory.raiseEvent("app/hangman_hint_for_pepper", str(hint))
                    self.memory.raiseEvent("app/hangman_word_for_pepper", str(word))
                    #PSK check
                    s.send_response(200)
                    s.end_headers()
                    return (file_content)
                elif path == '/sendresults':
                    s.send_response(200)
                    s.end_headers()
                    self.logger.info(file_content)

                    result = json.loads(file_content)
                    self.logger.info(result)
                    time = result['time_taken']
                    self.logger.info("time = " + str(time))
                    lives = result['lives_left']
                    self.logger.info("lives = " + str(lives))

                    self.memory.raiseEvent("app/hangman_android_finish_status", 'finish')
                    self.memory.raiseEvent("app/hangman_android_user_time", str(time))
                    self.memory.raiseEvent("app/hangman_android_user_lives", str(lives))
                    self.logger.info("successfully raised events and grabbed android input")
                    return (file_content)
                elif path =='/pepperanimation':
                    self.logger.info(file_content)
                    self.logger.info('/pepperanimation')
                    content = json.loads(file_content)
                    choice = content['animation']
                    self.logger.info('input grab')
                    if choice == 'dance':
                        dances = ['dance','headbang','elephant']
                        animation = dances[int(random.uniform(0,2))]
                    elif choice == 'music':
                        sounds = ['tick','dwoo','song']
                        animation = sounds[int(random.uniform(0,2))]
                    else:
                        s.send_response(400)
                        s.end_headers()

                    self.logger.info('after choices')
                    dialog = 'game_' + animation
                    #game_state = self.memory.getData('app/gamemode') # 1 in game, 0 not in game

                    #if game_state == 1:
                    self.dialog.forceInput(str(dialog))
                    s.send_response(200)
                    s.end_headers()
                    self.logger.info(file_content)
                    return (file_content)
                elif path == '/photo':
                    s.send_response(200)
                    s.end_headers()
                    content = json.loads(file_content)
                    photo = content['photo']
                    self.memory.insertData('photo',str(photo))
                    self.logger.info('PHOTO: ' + str(photo))
                    self.memory.raiseEvent('app/photo_received', '1')
                    return(file_content)
                elif path == '/message':
                    content = json.loads(file_content)
                    msg = content['msg']
                    PSK = content['PSK']
                    self.logger.info('PSK: ' + str(PSK))
                    username = content['username']
                    self.logger.info('username: ' + str(username))
                    self.logger.info("msg= " + str(msg))
                    self.memory.insertData("ActualLastMessage",self.memory.getData("Dialog/LastInput"))

                    self.dialog.forceInput(str(msg))
                    self.logger.info("got here")
                    self.logger.info("username = " + str(username))
                    response = self.memory.getData("Dialog/Answered")
                    self.logger.info('Response: ' + str(response))
                    self.logger.info('username: ' + str(username))

                    self.memory.raiseEvent("app/active_user", str(username))


                    if(self.last_output == response or response == ""):
                        self.logger.info('Sa')
                        if(self.last_output != str(msg)):
                            self.logger.info('Mw')
                            self.last_output = response
                            response = "Sorry, I did not understand you."
                            self.tts.say(response)
                    else:
                        self.logger.info('Op')
                        self.last_output = response
                        self.last_valid_input = msg

                    self.logger.info('Point A')
                    self.logger.info(file_content)

                    s.send_response(200)
                    s.send_header('Content-Type','application/json')
                    s.end_headers()
                    s.wfile.write(json.dumps({'res':response}))
                    self.logger.info('Point B')
                    return (file_content)





        port = 8165
        self.server = HTTPServer(('10.0.0.3',port),handleHTTPRequest)
        self.server.serve_forever()
        #server.shutdown
       ## self.server.socket.close()









        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="loginEvent" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Output name="onDialog" type="1" type_size="1" nature="2" inner="0" tooltip="Send message into dialog system" id="6" /></Box><Box name="Action_Responses" id="7" localization="8" tooltip="" x="118" y="212"><dialogFile>../PerformAction/PerformAction.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="discoAction" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Output name="guitarAction" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" /><Output name="playSong" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" /><Output name="danceForMe" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" /><Output name="loveSong" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" /><Output name="loveSongDance" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" /></Box><Box name="Disco" id="16" localization="8" tooltip="ID : #04B 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Disco" x="353" y="290"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        #self.onStopped() # activate output of the box

        ""

    def onInput_onStop(self):
        ""]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Animation starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Animation stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when animation is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="398"><ActuatorList model="nao"><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="42" value="-42.7" /><Key frame="62" value="16.6" /><Key frame="85" value="-42.7" /><Key frame="105" value="16.6" /><Key frame="127" value="-42.7" /><Key frame="147" value="16.6" /><Key frame="170" value="-42.7" /><Key frame="190" value="16.6" /><Key frame="217" value="42.7" /><Key frame="237" value="-16.6" /><Key frame="260" value="42.7" /><Key frame="280" value="-16.6" /><Key frame="301" value="42.7" /><Key frame="321" value="-16.6" /><Key frame="343" value="42.7" /><Key frame="363" value="-16.6" /><Key frame="396" value="0.524941" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="42" value="-27.3" /><Key frame="62" value="19.4" /><Key frame="85" value="-27.3" /><Key frame="105" value="19.4" /><Key frame="127" value="-27.3" /><Key frame="147" value="19.4" /><Key frame="170" value="-27.3" /><Key frame="190" value="19.4" /><Key frame="217" value="-27.3" /><Key frame="237" value="19.4" /><Key frame="260" value="-27.3" /><Key frame="280" value="19.4" /><Key frame="301" value="-27.3" /><Key frame="321" value="19.4" /><Key frame="343" value="-27.3" /><Key frame="363" value="19.4" /><Key frame="396" value="-9.84628" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="21" value="36.6484" /><Key frame="42" value="100.106" /><Key frame="62" value="106.347" /><Key frame="85" value="100.106" /><Key frame="105" value="106.347" /><Key frame="127" value="100.106" /><Key frame="147" value="106.347" /><Key frame="170" value="100.106" /><Key frame="190" value="106.347" /><Key frame="204" value="69.6" /><Key frame="219" value="-68.2895" /><Key frame="239" value="57.0441" /><Key frame="262" value="-68.2895" /><Key frame="282" value="57.0441" /><Key frame="303" value="-68.2895" /><Key frame="323" value="57.0441" /><Key frame="345" value="-68.2895" /><Key frame="365" value="57.0441" /><Key frame="385" value="61" /><Key frame="398" value="84.2858" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="21" value="19.5096" /><Key frame="42" value="13.8845" /><Key frame="62" value="11.2477" /><Key frame="85" value="13.8845" /><Key frame="105" value="11.2477" /><Key frame="127" value="13.8845" /><Key frame="147" value="11.2477" /><Key frame="170" value="13.8845" /><Key frame="190" value="11.2477" /><Key frame="204" value="9.5" /><Key frame="219" value="18.8112" /><Key frame="229" value="34.1" /><Key frame="239" value="-18" /><Key frame="251" value="34.1" /><Key frame="262" value="18.8112" /><Key frame="272" value="34.1" /><Key frame="282" value="-18" /><Key frame="294" value="34.1" /><Key frame="303" value="18.8112" /><Key frame="313" value="34.1" /><Key frame="323" value="-18" /><Key frame="335" value="34.1" /><Key frame="345" value="18.8112" /><Key frame="355" value="34.1" /><Key frame="365" value="-18" /><Key frame="377" value="34.1" /><Key frame="398" value="8.78677" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="21" value="-37.5322" /><Key frame="32" value="-101.1" /><Key frame="42" value="-21.7996" /><Key frame="62" value="-35.4228" /><Key frame="85" value="-21.7996" /><Key frame="105" value="-35.4228" /><Key frame="127" value="-21.7996" /><Key frame="147" value="-35.4228" /><Key frame="170" value="-21.7996" /><Key frame="190" value="-35.4228" /><Key frame="204" value="-94.9" /><Key frame="219" value="48.7823" /><Key frame="229" value="4.3" /><Key frame="239" value="0.090296" /><Key frame="251" value="26.4" /><Key frame="262" value="48.7823" /><Key frame="272" value="4.3" /><Key frame="282" value="0.090296" /><Key frame="294" value="26.4" /><Key frame="303" value="48.7823" /><Key frame="313" value="4.3" /><Key frame="323" value="0.090296" /><Key frame="335" value="26.4" /><Key frame="345" value="48.7823" /><Key frame="355" value="4.3" /><Key frame="365" value="0.090296" /><Key frame="377" value="-39.1" /><Key frame="398" value="-69.349" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="21" value="-78.6607" /><Key frame="32" value="-64.7" /><Key frame="42" value="-21.1795" /><Key frame="62" value="-11.5993" /><Key frame="85" value="-21.1795" /><Key frame="105" value="-11.5993" /><Key frame="127" value="-21.1795" /><Key frame="147" value="-11.5993" /><Key frame="170" value="-21.1795" /><Key frame="190" value="-11.5993" /><Key frame="204" value="-88.5" /><Key frame="219" value="-7.91266" /><Key frame="229" value="-75" /><Key frame="239" value="-14.7682" /><Key frame="251" value="-83.6" /><Key frame="262" value="-7.91266" /><Key frame="272" value="-75" /><Key frame="282" value="-14.7682" /><Key frame="294" value="-83.6" /><Key frame="303" value="-7.91266" /><Key frame="313" value="-75" /><Key frame="323" value="-14.7682" /><Key frame="335" value="-83.6" /><Key frame="345" value="-7.91266" /><Key frame="355" value="-75" /><Key frame="365" value="-14.7682" /><Key frame="377" value="-83.6" /><Key frame="398" value="-24.3436" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="21" value="6.85315" /><Key frame="32" value="-83.1" /><Key frame="42" value="-22.6785" /><Key frame="62" value="-24.0847" /><Key frame="85" value="-22.6785" /><Key frame="105" value="-24.0847" /><Key frame="127" value="-22.6785" /><Key frame="147" value="-24.0847" /><Key frame="170" value="-22.6785" /><Key frame="190" value="-24.0847" /><Key frame="219" value="-6.15002" /><Key frame="239" value="-22.9373" /><Key frame="262" value="-6.15002" /><Key frame="282" value="-22.9373" /><Key frame="303" value="-6.15002" /><Key frame="323" value="-22.9373" /><Key frame="345" value="-6.15002" /><Key frame="365" value="-22.9373" /><Key frame="398" value="4.74374" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="21" value="0.2" /><Key frame="32" value="0.6" /><Key frame="42" value="0.2648" /><Key frame="62" value="0.264" /><Key frame="85" value="0.2648" /><Key frame="105" value="0.264" /><Key frame="127" value="0.2648" /><Key frame="147" value="0.264" /><Key frame="170" value="0.2648" /><Key frame="190" value="0.264" /><Key frame="204" value="0.13" /><Key frame="219" value="0.678" /><Key frame="229" value="0.3" /><Key frame="239" value="0.6784" /><Key frame="251" value="0.3" /><Key frame="262" value="0.678" /><Key frame="272" value="0.3" /><Key frame="282" value="0.6784" /><Key frame="294" value="0.3" /><Key frame="303" value="0.678" /><Key frame="313" value="0.3" /><Key frame="323" value="0.6784" /><Key frame="335" value="0.3" /><Key frame="345" value="0.678" /><Key frame="355" value="0.3" /><Key frame="365" value="0.6784" /><Key frame="377" value="0.3" /><Key frame="398" value="0.2968" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="23" value="52.4738" /><Key frame="44" value="-68.2895" /><Key frame="64" value="57.0441" /><Key frame="87" value="-68.2895" /><Key frame="107" value="57.0441" /><Key frame="129" value="-68.2895" /><Key frame="149" value="57.0441" /><Key frame="172" value="-68.2895" /><Key frame="192" value="57.0441" /><Key frame="204" value="69.6" /><Key frame="217" value="100.106" /><Key frame="237" value="106.347" /><Key frame="260" value="100.106" /><Key frame="280" value="106.347" /><Key frame="301" value="100.106" /><Key frame="321" value="106.347" /><Key frame="343" value="100.106" /><Key frame="363" value="106.347" /><Key frame="386" value="67.9" /><Key frame="396" value="84.3785" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="23" value="-15.2956" /><Key frame="34" value="-38.4" /><Key frame="44" value="-18.8112" /><Key frame="54" value="-34.1" /><Key frame="64" value="18" /><Key frame="76" value="-34.1" /><Key frame="87" value="-18.8112" /><Key frame="97" value="-34.1" /><Key frame="107" value="18" /><Key frame="119" value="-34.1" /><Key frame="129" value="-18.8112" /><Key frame="139" value="-34.1" /><Key frame="149" value="18" /><Key frame="161" value="-34.1" /><Key frame="172" value="-18.8112" /><Key frame="182" value="-34.1" /><Key frame="192" value="18" /><Key frame="204" value="-9.5" /><Key frame="217" value="-13.8845" /><Key frame="237" value="-11.2477" /><Key frame="260" value="-13.8845" /><Key frame="280" value="-11.2477" /><Key frame="301" value="-13.8845" /><Key frame="321" value="-11.2477" /><Key frame="343" value="-13.8845" /><Key frame="363" value="-11.2477" /><Key frame="378" value="-26.1" /><Key frame="396" value="-9.40682" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="23" value="34.0996" /><Key frame="34" value="32.5" /><Key frame="44" value="-48.7823" /><Key frame="54" value="-4.3" /><Key frame="64" value="-0.090296" /><Key frame="76" value="-26.4" /><Key frame="87" value="-48.7823" /><Key frame="97" value="-4.3" /><Key frame="107" value="-0.090296" /><Key frame="119" value="-26.4" /><Key frame="129" value="-48.7823" /><Key frame="139" value="-4.3" /><Key frame="149" value="-0.090296" /><Key frame="161" value="-26.4" /><Key frame="172" value="-48.7823" /><Key frame="182" value="-4.3" /><Key frame="192" value="-0.090296" /><Key frame="204" value="94.9" /><Key frame="217" value="21.7996" /><Key frame="237" value="35.4228" /><Key frame="260" value="21.7996" /><Key frame="280" value="35.4228" /><Key frame="301" value="21.7996" /><Key frame="321" value="35.4228" /><Key frame="343" value="21.7996" /><Key frame="363" value="35.4228" /><Key frame="378" value="90.5" /><Key frame="386" value="59.2" /><Key frame="396" value="69.3442" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="23" value="77.1713" /><Key frame="34" value="64.2" /><Key frame="44" value="7.91266" /><Key frame="54" value="75" /><Key frame="64" value="14.7682" /><Key frame="76" value="83.6" /><Key frame="87" value="7.91266" /><Key frame="97" value="75" /><Key frame="107" value="14.7682" /><Key frame="119" value="83.6" /><Key frame="129" value="7.91266" /><Key frame="139" value="75" /><Key frame="149" value="14.7682" /><Key frame="161" value="83.6" /><Key frame="172" value="7.91266" /><Key frame="182" value="75" /><Key frame="192" value="14.7682" /><Key frame="204" value="88.5" /><Key frame="217" value="21.1795" /><Key frame="237" value="11.5993" /><Key frame="260" value="21.1795" /><Key frame="280" value="11.5993" /><Key frame="301" value="21.1795" /><Key frame="321" value="11.5993" /><Key frame="343" value="21.1795" /><Key frame="363" value="11.5993" /><Key frame="378" value="47.1" /><Key frame="386" value="50.8" /><Key frame="396" value="24.6121" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="23" value="-23.03" /><Key frame="34" value="79.8" /><Key frame="44" value="6.15002" /><Key frame="64" value="22.9373" /><Key frame="87" value="6.15002" /><Key frame="107" value="22.9373" /><Key frame="129" value="6.15002" /><Key frame="149" value="22.9373" /><Key frame="172" value="6.15002" /><Key frame="192" value="22.9373" /><Key frame="217" value="22.6785" /><Key frame="237" value="24.0847" /><Key frame="260" value="22.6785" /><Key frame="280" value="24.0847" /><Key frame="301" value="22.6785" /><Key frame="321" value="24.0847" /><Key frame="343" value="22.6785" /><Key frame="363" value="24.0847" /><Key frame="396" value="6.2379" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="23" value="0.2" /><Key frame="34" value="0.5" /><Key frame="44" value="0.678" /><Key frame="54" value="0.3" /><Key frame="64" value="0.6784" /><Key frame="76" value="0.3" /><Key frame="87" value="0.678" /><Key frame="97" value="0.3" /><Key frame="107" value="0.6784" /><Key frame="119" value="0.3" /><Key frame="129" value="0.678" /><Key frame="139" value="0.3" /><Key frame="149" value="0.6784" /><Key frame="161" value="0.3" /><Key frame="172" value="0.678" /><Key frame="182" value="0.3" /><Key frame="192" value="0.6784" /><Key frame="204" value="0.13" /><Key frame="217" value="0.2648" /><Key frame="237" value="0.264" /><Key frame="260" value="0.2648" /><Key frame="280" value="0.264" /><Key frame="301" value="0.2648" /><Key frame="321" value="0.264" /><Key frame="343" value="0.2648" /><Key frame="363" value="0.264" /><Key frame="386" value="0.24" /><Key frame="396" value="0.2976" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0"><Key frame="18" value="-25.3983" /><Key frame="40" value="-21.3553" /><Key frame="60" value="-20.4764" /><Key frame="83" value="-21.3553" /><Key frame="103" value="-20.4764" /><Key frame="125" value="-21.3553" /><Key frame="145" value="-20.4764" /><Key frame="168" value="-21.3553" /><Key frame="188" value="-20.4764" /><Key frame="215" value="-21.3553" /><Key frame="235" value="-20.4764" /><Key frame="258" value="-21.3553" /><Key frame="278" value="-20.4764" /><Key frame="299" value="-21.3553" /><Key frame="319" value="-20.4764" /><Key frame="341" value="-21.3553" /><Key frame="361" value="-20.4764" /><Key frame="394" value="-9.75358" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0"><Key frame="18" value="0.266079" /><Key frame="40" value="-8.25942" /><Key frame="60" value="18.8991" /><Key frame="83" value="-8.25942" /><Key frame="103" value="18.8991" /><Key frame="125" value="-8.25942" /><Key frame="145" value="18.8991" /><Key frame="168" value="-8.25942" /><Key frame="188" value="18.8991" /><Key frame="215" value="17.0486" /><Key frame="235" value="-8.08844" /><Key frame="258" value="17.0486" /><Key frame="278" value="-8.08844" /><Key frame="299" value="17.0486" /><Key frame="319" value="-8.08844" /><Key frame="341" value="17.0486" /><Key frame="361" value="-8.08844" /><Key frame="394" value="5.89115" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0"><Key frame="18" value="-8.78677" /><Key frame="40" value="10.6373" /><Key frame="60" value="8.44001" /><Key frame="83" value="10.6373" /><Key frame="103" value="8.44001" /><Key frame="125" value="10.6373" /><Key frame="145" value="8.44001" /><Key frame="168" value="10.6373" /><Key frame="188" value="8.44001" /><Key frame="215" value="5.79845" /><Key frame="235" value="14.8513" /><Key frame="258" value="5.79845" /><Key frame="278" value="14.8513" /><Key frame="299" value="5.79845" /><Key frame="319" value="14.8513" /><Key frame="341" value="5.79845" /><Key frame="361" value="14.8513" /><Key frame="394" value="8.00056" /></ActuatorCurve><ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0"><Key frame="18" value="23.201" /><Key frame="40" value="-5.18802" /><Key frame="60" value="-4.57277" /><Key frame="83" value="-5.18802" /><Key frame="103" value="-4.57277" /><Key frame="125" value="-5.18802" /><Key frame="145" value="-4.57277" /><Key frame="168" value="-5.18802" /><Key frame="188" value="-4.57277" /><Key frame="215" value="-5.18321" /><Key frame="235" value="-5.18321" /><Key frame="258" value="-5.18321" /><Key frame="278" value="-5.18321" /><Key frame="299" value="-5.18321" /><Key frame="319" value="-5.18321" /><Key frame="341" value="-5.18321" /><Key frame="361" value="-5.18321" /><Key frame="394" value="-4.48488" /></ActuatorCurve><ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0"><Key frame="18" value="-2.63916" /><Key frame="40" value="2.54646" /><Key frame="60" value="9.22623" /><Key frame="83" value="2.54646" /><Key frame="103" value="9.22623" /><Key frame="125" value="2.54646" /><Key frame="145" value="9.22623" /><Key frame="168" value="2.54646" /><Key frame="188" value="9.22623" /><Key frame="215" value="5.27591" /><Key frame="235" value="4.74856" /><Key frame="258" value="5.27591" /><Key frame="278" value="4.74856" /><Key frame="299" value="5.27591" /><Key frame="319" value="4.74856" /><Key frame="341" value="5.27591" /><Key frame="361" value="4.74856" /><Key frame="394" value="5.00743" /></ActuatorCurve><ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0"><Key frame="18" value="-1.0523" /><Key frame="40" value="3.60597" /><Key frame="60" value="-14.2361" /><Key frame="83" value="3.60597" /><Key frame="103" value="-14.2361" /><Key frame="125" value="3.60597" /><Key frame="145" value="-14.2361" /><Key frame="168" value="3.60597" /><Key frame="188" value="-14.2361" /><Key frame="215" value="-15.1198" /><Key frame="235" value="5.18321" /><Key frame="258" value="-15.1198" /><Key frame="278" value="5.18321" /><Key frame="299" value="-15.1198" /><Key frame="319" value="5.18321" /><Key frame="341" value="-15.1198" /><Key frame="361" value="5.18321" /><Key frame="394" value="-6.94104" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0"><Key frame="18" value="-6.85315" /><Key frame="40" value="-17.0486" /><Key frame="60" value="8.08844" /><Key frame="83" value="-17.0486" /><Key frame="103" value="8.08844" /><Key frame="125" value="-17.0486" /><Key frame="145" value="8.08844" /><Key frame="168" value="-17.0486" /><Key frame="188" value="8.08844" /><Key frame="215" value="8.25942" /><Key frame="235" value="-18.8991" /><Key frame="258" value="8.25942" /><Key frame="278" value="-18.8991" /><Key frame="299" value="8.25942" /><Key frame="319" value="-18.8991" /><Key frame="341" value="8.25942" /><Key frame="361" value="-18.8991" /><Key frame="394" value="-5.53478" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0"><Key frame="18" value="-10.1978" /><Key frame="40" value="5.79845" /><Key frame="60" value="14.8513" /><Key frame="83" value="5.79845" /><Key frame="103" value="14.8513" /><Key frame="125" value="5.79845" /><Key frame="145" value="14.8513" /><Key frame="168" value="5.79845" /><Key frame="188" value="14.8513" /><Key frame="215" value="10.6373" /><Key frame="235" value="8.44001" /><Key frame="258" value="10.6373" /><Key frame="278" value="8.44001" /><Key frame="299" value="10.6373" /><Key frame="319" value="8.44001" /><Key frame="341" value="10.6373" /><Key frame="361" value="8.44001" /><Key frame="394" value="7.55628" /></ActuatorCurve><ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0"><Key frame="18" value="24.4363" /><Key frame="40" value="-5.18321" /><Key frame="60" value="-5.18321" /><Key frame="83" value="-5.18321" /><Key frame="103" value="-5.18321" /><Key frame="125" value="-5.18321" /><Key frame="145" value="-5.18321" /><Key frame="168" value="-5.18321" /><Key frame="188" value="-5.18321" /><Key frame="215" value="-5.18802" /><Key frame="235" value="-4.57277" /><Key frame="258" value="-5.18802" /><Key frame="278" value="-4.57277" /><Key frame="299" value="-5.18802" /><Key frame="319" value="-4.57277" /><Key frame="341" value="-5.18802" /><Key frame="361" value="-4.57277" /><Key frame="394" value="-5.2711" /></ActuatorCurve><ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0"><Key frame="18" value="-2.98591" /><Key frame="40" value="5.27591" /><Key frame="60" value="4.74856" /><Key frame="83" value="5.27591" /><Key frame="103" value="4.74856" /><Key frame="125" value="5.27591" /><Key frame="145" value="4.74856" /><Key frame="168" value="5.27591" /><Key frame="188" value="4.74856" /><Key frame="215" value="2.54646" /><Key frame="235" value="9.22623" /><Key frame="258" value="2.54646" /><Key frame="278" value="9.22623" /><Key frame="299" value="2.54646" /><Key frame="319" value="9.22623" /><Key frame="341" value="2.54646" /><Key frame="361" value="9.22623" /><Key frame="394" value="5.3638" /></ActuatorCurve><ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0"><Key frame="18" value="5.53958" /><Key frame="40" value="15.1198" /><Key frame="60" value="-5.18321" /><Key frame="83" value="15.1198" /><Key frame="103" value="-5.18321" /><Key frame="125" value="15.1198" /><Key frame="145" value="-5.18321" /><Key frame="168" value="15.1198" /><Key frame="188" value="-5.18321" /><Key frame="215" value="-3.60597" /><Key frame="235" value="14.2361" /><Key frame="258" value="-3.60597" /><Key frame="278" value="14.2361" /><Key frame="299" value="-3.60597" /><Key frame="319" value="14.2361" /><Key frame="341" value="-3.60597" /><Key frame="361" value="14.2361" /><Key frame="394" value="6.85796" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0"><Key frame="40" value="-21.3553" /><Key frame="83" value="-21.3553" /><Key frame="125" value="-21.3553" /><Key frame="168" value="-21.3553" /><Key frame="215" value="-21.3553" /><Key frame="258" value="-21.3553" /><Key frame="299" value="-21.3553" /><Key frame="341" value="-21.3553" /><Key frame="394" value="-9.75358" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Guitar" id="2" localization="8" tooltip="ID : #04D 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Entertainment&#x0A;- Dances&#x0A;- Headbang" x="529" y="357"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="singSong" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="287"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="26" value="7.55628" /><Key frame="39" value="-0.529755" /><Key frame="50" value="15.2908" /><Key frame="75" value="-14.9715" /><Key frame="86" value="9.40201" /><Key frame="92" value="-11.5437" /><Key frame="102" value="11.9509" /><Key frame="110" value="3.1617" /><Key frame="120" value="-13.5183" /><Key frame="127" value="5.49971" /><Key frame="140" value="13.8553" /><Key frame="151" value="-9.40302" /><Key frame="160" value="-13.0066" /><Key frame="171" value="4.26921" /><Key frame="178" value="10.5974" /><Key frame="212" value="-15.825" /><Key frame="220" value="6.77121" /><Key frame="233" value="-6.50261" /><Key frame="243" value="8.61691" /><Key frame="281" value="-11.0006" /><Key frame="287" value="-11.2138" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="26" value="14.6755" /><Key frame="39" value="13.6208" /><Key frame="67" value="7.46839" /><Key frame="75" value="0.612838" /><Key frame="92" value="1.93121" /><Key frame="110" value="17.7517" /><Key frame="120" value="17.2244" /><Key frame="127" value="21.4432" /><Key frame="140" value="20.3496" /><Key frame="151" value="13.1814" /><Key frame="160" value="13.0056" /><Key frame="171" value="15.2908" /><Key frame="188" value="14.9392" /><Key frame="220" value="-6.56512" /><Key frame="243" value="-0.178188" /><Key frame="266" value="11.1598" /><Key frame="281" value="0.210386" /><Key frame="287" value="0.163687" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="12" value="-1.97851" /><Key frame="36" value="-24.0718" /><Key frame="47" value="-17.3873" /><Key frame="117" value="-17.0612" /><Key frame="129" value="-6.50907" /><Key frame="148" value="-6.50907" /><Key frame="168" value="-17.1692" /><Key frame="185" value="-17.1692" /><Key frame="198" value="-6.10369" /><Key frame="217" value="-17.2009" /><Key frame="231" value="-16.6204" /><Key frame="244" value="-22.5053" /><Key frame="251" value="-21.8842" /><Key frame="268" value="-18.1128" /><Key frame="281" value="-3.23608" /><Key frame="287" value="-2.74407" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="12" value="-0.433542" /><Key frame="36" value="-2.28016" /><Key frame="47" value="-8.11443" /><Key frame="64" value="-3.91495" /><Key frame="89" value="-9.71783" /><Key frame="129" value="-7.46617" /><Key frame="148" value="-0.175686" /><Key frame="168" value="3.53842" /><Key frame="185" value="3.53842" /><Key frame="198" value="0.269135" /><Key frame="217" value="3.39891" /><Key frame="231" value="3.39891" /><Key frame="268" value="-2.66845" /><Key frame="281" value="-0.362005" /><Key frame="287" value="-0.133749" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="12" value="-0.573235" /><Key frame="36" value="13.6999" /><Key frame="47" value="9.20669" /><Key frame="117" value="9.20669" /><Key frame="129" value="1.90279" /><Key frame="148" value="1.90279" /><Key frame="168" value="9.84374" /><Key frame="185" value="9.84374" /><Key frame="198" value="1.91406" /><Key frame="217" value="10.2565" /><Key frame="231" value="10.2565" /><Key frame="244" value="16.6653" /><Key frame="251" value="16.0867" /><Key frame="268" value="9.04071" /><Key frame="281" value="-0.173133" /><Key frame="287" value="-0.659074" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="12" value="-37" /><Key frame="23" value="-58.545" /><Key frame="36" value="-58.0177" /><Key frame="47" value="-61.5333" /><Key frame="64" value="-73.2229" /><Key frame="83" value="-66.8068" /><Key frame="89" value="-66.8947" /><Key frame="99" value="-66.5432" /><Key frame="107" value="-66.1037" /><Key frame="117" value="-60.3907" /><Key frame="124" value="-70.1467" /><Key frame="137" value="-73.2229" /><Key frame="148" value="-72.1682" /><Key frame="157" value="-67.6857" /><Key frame="168" value="-73.3108" /><Key frame="175" value="-69.883" /><Key frame="185" value="-70.1467" /><Key frame="198" value="-63.2033" /><Key frame="209" value="-64.6974" /><Key frame="217" value="-64.8732" /><Key frame="230" value="-61.2697" /><Key frame="240" value="-60.5665" /><Key frame="248" value="-59.0724" /><Key frame="263" value="-67.6094" /><Key frame="274" value="-52.5" /><Key frame="281" value="-33.5273" /><Key frame="287" value="-29.9557" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="12" value="-91" /><Key frame="23" value="-116.723" /><Key frame="36" value="-110" /><Key frame="47" value="-111.625" /><Key frame="64" value="-92.4645" /><Key frame="83" value="-102.924" /><Key frame="89" value="-103.978" /><Key frame="99" value="-91.8493" /><Key frame="107" value="-93.695" /><Key frame="117" value="-102.308" /><Key frame="124" value="-93.8708" /><Key frame="137" value="-92.7282" /><Key frame="148" value="-87.5426" /><Key frame="157" value="-90.0914" /><Key frame="168" value="-76.2045" /><Key frame="175" value="-79.3686" /><Key frame="185" value="-70.8431" /><Key frame="198" value="-78.9292" /><Key frame="209" value="-85.6089" /><Key frame="217" value="-86.6636" /><Key frame="230" value="-76.8198" /><Key frame="240" value="-84.4664" /><Key frame="248" value="-85.2574" /><Key frame="263" value="-65.6575" /><Key frame="274" value="-59.2" /><Key frame="281" value="-68.5901" /><Key frame="287" value="-70.7426" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="12" value="0.636364" /><Key frame="23" value="0.345455" /><Key frame="36" value="0.254545" /><Key frame="47" value="0.381818" /><Key frame="89" value="0.366571" /><Key frame="99" value="0.0909091" /><Key frame="107" value="0.127273" /><Key frame="124" value="0.218182" /><Key frame="137" value="0.343298" /><Key frame="148" value="0.254545" /><Key frame="157" value="0.332753" /><Key frame="168" value="0.127273" /><Key frame="175" value="0.127273" /><Key frame="198" value="0.254545" /><Key frame="209" value="0.127273" /><Key frame="217" value="0.0909091" /><Key frame="230" value="0.176364" /><Key frame="240" value="0.0909091" /><Key frame="263" value="0.145455" /><Key frame="281" value="0.589875" /><Key frame="287" value="0.597963" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="23" value="32.0315" /><Key frame="36" value="29.3948" /><Key frame="47" value="24.0334" /><Key frame="64" value="27.8127" /><Key frame="83" value="28.7795" /><Key frame="89" value="27.3732" /><Key frame="99" value="25.6154" /><Key frame="107" value="25.0002" /><Key frame="117" value="32.2952" /><Key frame="124" value="33.4378" /><Key frame="137" value="34.7562" /><Key frame="148" value="36.3382" /><Key frame="157" value="38.6234" /><Key frame="168" value="36.9534" /><Key frame="175" value="36.6898" /><Key frame="185" value="37.5687" /><Key frame="198" value="31.9436" /><Key frame="209" value="35.1956" /><Key frame="217" value="33.8772" /><Key frame="230" value="28.5158" /><Key frame="240" value="30.6252" /><Key frame="248" value="29.9221" /><Key frame="263" value="20.437" /><Key frame="281" value="86.9996" /><Key frame="287" value="89.0357" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="23" value="29.7929" /><Key frame="36" value="29.4413" /><Key frame="47" value="27.6835" /><Key frame="64" value="26.453" /><Key frame="83" value="48.4259" /><Key frame="89" value="51.6779" /><Key frame="99" value="32.3418" /><Key frame="107" value="32.5175" /><Key frame="117" value="58.9729" /><Key frame="124" value="56.0725" /><Key frame="137" value="56.4241" /><Key frame="148" value="43.5919" /><Key frame="157" value="51.4143" /><Key frame="168" value="47.3712" /><Key frame="175" value="47.4591" /><Key frame="185" value="36.5606" /><Key frame="198" value="36.6484" /><Key frame="209" value="51.0627" /><Key frame="217" value="46.0529" /><Key frame="230" value="22.6737" /><Key frame="240" value="25.3104" /><Key frame="248" value="26.1014" /><Key frame="263" value="39.6368" /><Key frame="281" value="9.16962" /><Key frame="287" value="8.51138" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="12" value="-72" /><Key frame="23" value="-80" /><Key frame="36" value="-87" /><Key frame="47" value="-83" /><Key frame="64" value="-86" /><Key frame="83" value="-100" /><Key frame="89" value="-104" /><Key frame="107" value="-81.478" /><Key frame="117" value="-104" /><Key frame="124" value="-104.066" /><Key frame="137" value="-104.496" /><Key frame="157" value="-104.496" /><Key frame="175" value="-100.551" /><Key frame="198" value="-98.529" /><Key frame="217" value="-104.242" /><Key frame="240" value="-88.0699" /><Key frame="263" value="-98" /><Key frame="281" value="-3.1253" /><Key frame="287" value="-0.328876" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="24" value="71.6962" /><Key frame="37" value="75.6513" /><Key frame="48" value="53.5905" /><Key frame="55" value="68.0048" /><Key frame="65" value="59.3035" /><Key frame="73" value="50.778" /><Key frame="84" value="42.6041" /><Key frame="90" value="42.6041" /><Key frame="100" value="62.2918" /><Key frame="108" value="54.3815" /><Key frame="118" value="68.7079" /><Key frame="125" value="48.9676" /><Key frame="138" value="37.7643" /><Key frame="149" value="71.872" /><Key frame="158" value="52.6237" /><Key frame="164" value="76.433" /><Key frame="169" value="55.6999" /><Key frame="176" value="72.8388" /><Key frame="186" value="47.3502" /><Key frame="199" value="36.5395" /><Key frame="210" value="72.9267" /><Key frame="218" value="53.9421" /><Key frame="225" value="71.3447" /><Key frame="231" value="47.7018" /><Key frame="241" value="73.1025" /><Key frame="249" value="51.5752" /><Key frame="264" value="31.7116" /><Key frame="275" value="44.6" /><Key frame="281" value="33.7262" /><Key frame="287" value="29.9781" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="24" value="32.4813" /><Key frame="37" value="41.2705" /><Key frame="48" value="7.02893" /><Key frame="55" value="27.3319" /><Key frame="65" value="23.992" /><Key frame="73" value="5.71056" /><Key frame="84" value="-3.51807" /><Key frame="90" value="-3.69386" /><Key frame="100" value="25.7499" /><Key frame="108" value="1.14019" /><Key frame="118" value="37.2379" /><Key frame="125" value="0.349163" /><Key frame="138" value="7.90785" /><Key frame="149" value="35.9453" /><Key frame="158" value="8.87466" /><Key frame="164" value="41.1309" /><Key frame="169" value="8.78677" /><Key frame="176" value="33.6601" /><Key frame="186" value="13.5329" /><Key frame="199" value="13.3571" /><Key frame="210" value="35.1543" /><Key frame="218" value="14.3239" /><Key frame="225" value="39.8125" /><Key frame="231" value="-0.79343" /><Key frame="241" value="26.6288" /><Key frame="249" value="4.74375" /><Key frame="264" value="13.8845" /><Key frame="275" value="68.1" /><Key frame="281" value="69.6515" /><Key frame="287" value="69.9674" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="24" value="0.454545" /><Key frame="37" value="0.45348" /><Key frame="48" value="0.672727" /><Key frame="55" value="0.287273" /><Key frame="65" value="0.381818" /><Key frame="84" value="0.690909" /><Key frame="90" value="0.654545" /><Key frame="100" value="0.305455" /><Key frame="108" value="0.418182" /><Key frame="118" value="0.345455" /><Key frame="125" value="0.654545" /><Key frame="138" value="0.749091" /><Key frame="158" value="0.469091" /><Key frame="164" value="0.327273" /><Key frame="169" value="0.436364" /><Key frame="176" value="0.318182" /><Key frame="186" value="0.545455" /><Key frame="199" value="0.727273" /><Key frame="210" value="0.436364" /><Key frame="218" value="0.729115" /><Key frame="225" value="0.490909" /><Key frame="231" value="0.618182" /><Key frame="241" value="0.490909" /><Key frame="249" value="0.745455" /><Key frame="264" value="0.662205" /><Key frame="281" value="0.613137" /><Key frame="287" value="0.607433" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="24" value="25.2015" /><Key frame="37" value="25.641" /><Key frame="48" value="31.8813" /><Key frame="55" value="26.6078" /><Key frame="65" value="26.3441" /><Key frame="73" value="30.2113" /><Key frame="84" value="32.5844" /><Key frame="90" value="33.3754" /><Key frame="100" value="22.8284" /><Key frame="108" value="27.4867" /><Key frame="118" value="12.2814" /><Key frame="125" value="40.9341" /><Key frame="138" value="48.7565" /><Key frame="149" value="42.1646" /><Key frame="158" value="44.5377" /><Key frame="164" value="34.9575" /><Key frame="169" value="38.2974" /><Key frame="176" value="35.3969" /><Key frame="186" value="51.3932" /><Key frame="199" value="57.0183" /><Key frame="210" value="31.9692" /><Key frame="218" value="39.1763" /><Key frame="225" value="20.2796" /><Key frame="231" value="33.9028" /><Key frame="241" value="26.5199" /><Key frame="249" value="35.6606" /><Key frame="264" value="57.1062" /><Key frame="281" value="88.5927" /><Key frame="287" value="89.1702" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="24" value="-31.5969" /><Key frame="37" value="-27.2903" /><Key frame="48" value="-22.3424" /><Key frame="55" value="-21.112" /><Key frame="65" value="-19.442" /><Key frame="73" value="-21.3756" /><Key frame="84" value="-21.3756" /><Key frame="90" value="-21.5514" /><Key frame="100" value="-15.5748" /><Key frame="108" value="-18.1236" /><Key frame="118" value="-15.6627" /><Key frame="125" value="-30.9558" /><Key frame="138" value="-32.0984" /><Key frame="149" value="-28.4948" /><Key frame="158" value="-28.3191" /><Key frame="164" value="-27.0007" /><Key frame="169" value="-25.946" /><Key frame="176" value="-23.7487" /><Key frame="186" value="-25.5065" /><Key frame="199" value="-25.946" /><Key frame="210" value="-26.737" /><Key frame="218" value="-32.1863" /><Key frame="225" value="-26.6491" /><Key frame="231" value="-28.2312" /><Key frame="241" value="-26.6491" /><Key frame="249" value="-20.9362" /><Key frame="264" value="-44.1396" /><Key frame="281" value="-9.99848" /><Key frame="287" value="-8.75354" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="24" value="58" /><Key frame="37" value="57.6546" /><Key frame="55" value="56.6878" /><Key frame="65" value="56.5999" /><Key frame="90" value="57.5667" /><Key frame="100" value="58.6214" /><Key frame="125" value="59.3245" /><Key frame="138" value="58.5335" /><Key frame="158" value="58.9729" /><Key frame="169" value="58.6214" /><Key frame="186" value="57.303" /><Key frame="210" value="68" /><Key frame="218" value="47" /><Key frame="225" value="63" /><Key frame="231" value="53" /><Key frame="241" value="59" /><Key frame="249" value="49" /><Key frame="264" value="44" /><Key frame="281" value="0.980029" /><Key frame="287" value="0.060775" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="play wonderland" id="4" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="511" y="450"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../johnmayer.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="brickhouse" id="5" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="499" y="256"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../brickhouse.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="LoveSong" id="8" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="289" y="419"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../lovesong.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="Headbang" id="11" localization="8" tooltip="ID : #04B 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags :&#x0A;- Headbang" x="380" y="494"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="301"><BehaviorLayer name="behavior_layer1" mute="1"><BehaviorKeyframe name="keyframe1_copy" index="1"><Diagram><Box name="mischievous" id="1" localization="8" tooltip="mischievous" x="97" y="36"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):

            return;

        rDuration = 0.3;
        self.bMustStop = False;
        self.bIsRunning = True;

        while( not self.bMustStop ):
            ALLeds.post.fadeRGB( "FaceLed0", 0x060033, rDuration );
            ALLeds.post.fadeRGB( "FaceLed1", 0xf33300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff3300, rDuration );
            ALLeds.post.fadeRGB( "FaceLed3", 0x701a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration );
            ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed6", 0x000000, rDuration );
            ALLeds.post.fadeRGB( "FaceLed7", 0x000000, rDuration );

            #time.sleep( 0.1 );

            ALLeds.post.fadeRGB( "FaceLed0", 0x140000, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed1", 0xff3300, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed2", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed3", 0xf51a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed4", 0xff1a00, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed5", 0xff0033, rDuration*3 );
            ALLeds.post.fadeRGB( "FaceLed6", 0x7c0000, rDuration*3 );
            ALLeds.fadeRGB( "FaceLed7", 0x260000, rDuration*3 );

            if( self.bMustStop ):
                break;

        self.bIsRunning = False;
        self.onStopped();

    def onInput_onStop(self):
<<<<<<< HEAD
        self.bMustStop = True;]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="14" value="-12.3072" /><Key frame="23" value="12.4782" /><Key frame="36" value="-17.9323" /><Key frame="50" value="11.7751" /><Key frame="67" value="-17.7565" /><Key frame="80" value="10.6325" /><Key frame="94" value="-10.6373" /><Key frame="112" value="18.1033" /><Key frame="128" value="-13.8893" /><Key frame="145" value="12.5661" /><Key frame="161" value="-19.9538" /><Key frame="179" value="13.5329" /><Key frame="195" value="-18.3718" /><Key frame="212" value="14.8898" /><Key frame="221" value="-22.4847" /><Key frame="229" value="4.80263" /><Key frame="238" value="-15.0151" /><Key frame="246" value="3.78123" /><Key frame="253" value="-11.9858" /><Key frame="261" value="4.55645" /><Key frame="268" value="-5.32874" /><Key frame="278" value="11.5304" /><Key frame="290" value="8.81216" /><Key frame="301" value="-10.1978" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="14" value="-4.92434" /><Key frame="23" value="-4.57277" /><Key frame="36" value="-3.86964" /><Key frame="50" value="-5.53958" /><Key frame="67" value="-3.16651" /><Key frame="80" value="-1.76024" /><Key frame="94" value="-1.23289" /><Key frame="112" value="-3.34229" /><Key frame="128" value="-1.145" /><Key frame="145" value="-2.55126" /><Key frame="161" value="-3.2544" /><Key frame="179" value="-3.95753" /><Key frame="195" value="-5.89115" /><Key frame="212" value="-11.1647" /><Key frame="221" value="-9.49471" /><Key frame="229" value="-4.3091" /><Key frame="238" value="-0.705538" /><Key frame="246" value="-0.00240423" /><Key frame="253" value="-1.84813" /><Key frame="261" value="-2.46337" /><Key frame="268" value="-3.16651" /><Key frame="278" value="1.84332" /><Key frame="301" value="-0.090296" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="22" value="-25.7409" /><Key frame="35" value="-10.3033" /><Key frame="49" value="-25.7409" /><Key frame="66" value="-10.3033" /><Key frame="79" value="-25.7409" /><Key frame="93" value="-10.3033" /><Key frame="111" value="-19.581" /><Key frame="127" value="-10.3033" /><Key frame="144" value="-14.961" /><Key frame="160" value="-10.3033" /><Key frame="178" value="-14.961" /><Key frame="194" value="-10.3033" /><Key frame="211" value="-14.961" /><Key frame="245" value="-10.3033" /><Key frame="277" value="-25.7409" /><Key frame="290" value="-10.3033" /><Key frame="300" value="-2.57699" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="22" value="0" /><Key frame="35" value="0" /><Key frame="49" value="0" /><Key frame="66" value="0" /><Key frame="79" value="0" /><Key frame="93" value="0" /><Key frame="111" value="0" /><Key frame="127" value="0" /><Key frame="144" value="0" /><Key frame="160" value="0" /><Key frame="178" value="0" /><Key frame="194" value="0" /><Key frame="211" value="0" /><Key frame="245" value="0" /><Key frame="277" value="0" /><Key frame="290" value="0" /><Key frame="300" value="-0.00165662" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="22" value="14.0637" /><Key frame="35" value="4.14042" /><Key frame="49" value="14.0637" /><Key frame="66" value="4.14042" /><Key frame="79" value="14.0637" /><Key frame="93" value="4.14042" /><Key frame="111" value="12.5237" /><Key frame="127" value="4.14042" /><Key frame="144" value="9.44376" /><Key frame="160" value="4.14042" /><Key frame="178" value="9.44376" /><Key frame="194" value="4.14042" /><Key frame="211" value="9.44376" /><Key frame="245" value="4.14042" /><Key frame="277" value="14.0637" /><Key frame="290" value="4.14042" /><Key frame="300" value="-0.638153" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="20" value="-29.8808" /><Key frame="33" value="-29.7929" /><Key frame="47" value="-36.209" /><Key frame="64" value="-31.3749" /><Key frame="77" value="-31.8144" /><Key frame="91" value="-56.9514" /><Key frame="109" value="-56.4" /><Key frame="125" value="-78.8413" /><Key frame="142" value="-40.0762" /><Key frame="158" value="-88.5925" /><Key frame="176" value="-29.0019" /><Key frame="192" value="-88.5925" /><Key frame="209" value="-58.5335" /><Key frame="226" value="-66.0043" /><Key frame="243" value="-68.9047" /><Key frame="258" value="-53.6994" /><Key frame="275" value="-72.0688" /><Key frame="298" value="-33.8359" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="20" value="-88.3336" /><Key frame="33" value="-98.2654" /><Key frame="47" value="-102.748" /><Key frame="64" value="-104.242" /><Key frame="77" value="-95.3649" /><Key frame="91" value="-45.8" /><Key frame="109" value="-49.837" /><Key frame="125" value="-25.662" /><Key frame="142" value="-33.7528" /><Key frame="158" value="-80.0718" /><Key frame="176" value="-28.1278" /><Key frame="192" value="-80.0718" /><Key frame="209" value="-66.5364" /><Key frame="226" value="-53.88" /><Key frame="243" value="-53.5285" /><Key frame="258" value="-51.7706" /><Key frame="275" value="-45.3545" /><Key frame="298" value="-69.7005" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="20" value="0.230571" /><Key frame="33" value="0.230935" /><Key frame="64" value="0.230935" /><Key frame="91" value="0.224389" /><Key frame="109" value="0.618182" /><Key frame="125" value="0.45" /><Key frame="142" value="0.83" /><Key frame="158" value="0.43" /><Key frame="176" value="0.91" /><Key frame="192" value="0.51" /><Key frame="209" value="0.688387" /><Key frame="226" value="0.6992" /><Key frame="243" value="0.6992" /><Key frame="275" value="0.684" /><Key frame="298" value="0.232025" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="20" value="97.2937" /><Key frame="33" value="96.8543" /><Key frame="47" value="90.5261" /><Key frame="64" value="95.9754" /><Key frame="77" value="92.1081" /><Key frame="91" value="50.4" /><Key frame="109" value="-27.8" /><Key frame="125" value="-65.0375" /><Key frame="142" value="-41.2236" /><Key frame="158" value="-23.5574" /><Key frame="176" value="-54.7589" /><Key frame="192" value="-23.5574" /><Key frame="209" value="47.3" /><Key frame="226" value="76.7271" /><Key frame="243" value="82.44" /><Key frame="258" value="87.0983" /><Key frame="275" value="78.6607" /><Key frame="298" value="91.4929" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="20" value="9.84147" /><Key frame="33" value="10.0173" /><Key frame="47" value="6.85315" /><Key frame="64" value="7.02893" /><Key frame="77" value="6.41369" /><Key frame="91" value="26.2" /><Key frame="109" value="15.2" /><Key frame="125" value="58.1867" /><Key frame="142" value="24.2557" /><Key frame="158" value="64.4222" /><Key frame="176" value="11.072" /><Key frame="192" value="64.4222" /><Key frame="209" value="21.0916" /><Key frame="226" value="23.6405" /><Key frame="243" value="23.8163" /><Key frame="258" value="20.8279" /><Key frame="275" value="23.6405" /><Key frame="298" value="10.0173" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="20" value="5.44688" /><Key frame="33" value="5.53477" /><Key frame="64" value="5.44688" /><Key frame="91" value="12.7" /><Key frame="109" value="33" /><Key frame="125" value="7.91266" /><Key frame="142" value="18" /><Key frame="176" value="18.2791" /><Key frame="209" value="16.1697" /><Key frame="226" value="-15.8229" /><Key frame="243" value="-10.8131" /><Key frame="275" value="2.45857" /><Key frame="298" value="6.67737" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="21" value="56.9562" /><Key frame="34" value="86.5758" /><Key frame="48" value="50.3644" /><Key frame="65" value="89.5" /><Key frame="78" value="59.593" /><Key frame="92" value="89.5" /><Key frame="110" value="33.2255" /><Key frame="126" value="78.8413" /><Key frame="143" value="34.8075" /><Key frame="159" value="83.4995" /><Key frame="177" value="34.7196" /><Key frame="193" value="88.773" /><Key frame="210" value="38.7627" /><Key frame="227" value="51.1554" /><Key frame="244" value="57.3957" /><Key frame="259" value="45.7061" /><Key frame="276" value="65.0423" /><Key frame="299" value="25.2273" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="39.1" /><Key frame="21" value="10.2809" /><Key frame="34" value="31.3749" /><Key frame="48" value="10.7204" /><Key frame="65" value="31.9023" /><Key frame="78" value="18.5428" /><Key frame="92" value="31.2871" /><Key frame="110" value="11.6872" /><Key frame="126" value="25.662" /><Key frame="143" value="15.0271" /><Key frame="159" value="38.4942" /><Key frame="177" value="20.4764" /><Key frame="193" value="93.3386" /><Key frame="210" value="5.35899" /><Key frame="227" value="25.8378" /><Key frame="244" value="26.7167" /><Key frame="259" value="29.4413" /><Key frame="276" value="36.6484" /><Key frame="299" value="67.2348" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="12" value="0.57" /><Key frame="21" value="0.745455" /><Key frame="34" value="0.26" /><Key frame="48" value="0.82" /><Key frame="65" value="0.514873" /><Key frame="78" value="0.78" /><Key frame="92" value="0.3" /><Key frame="110" value="0.81" /><Key frame="126" value="0.45" /><Key frame="143" value="0.83" /><Key frame="159" value="0.43" /><Key frame="177" value="0.91" /><Key frame="193" value="0.51" /><Key frame="210" value="0.514873" /><Key frame="227" value="0.6944" /><Key frame="244" value="0.7988" /><Key frame="276" value="0.5424" /><Key frame="299" value="0.410207" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="21" value="-46.3165" /><Key frame="34" value="-64.7738" /><Key frame="48" value="-44.5587" /><Key frame="65" value="-44.7345" /><Key frame="78" value="-48.6017" /><Key frame="92" value="-49.217" /><Key frame="110" value="-64.6859" /><Key frame="126" value="-65.0375" /><Key frame="143" value="-50.4474" /><Key frame="159" value="-57.9182" /><Key frame="177" value="-55.6331" /><Key frame="193" value="9.05525" /><Key frame="210" value="18.3718" /><Key frame="227" value="60.2082" /><Key frame="244" value="66.6243" /><Key frame="259" value="70.4037" /><Key frame="276" value="70.931" /><Key frame="299" value="84.9937" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="21" value="-34.5438" /><Key frame="34" value="-73.6557" /><Key frame="48" value="-31.2919" /><Key frame="65" value="-74.7983" /><Key frame="78" value="-30.2372" /><Key frame="92" value="-80.4233" /><Key frame="110" value="-13.1862" /><Key frame="126" value="-58.1867" /><Key frame="143" value="-22.1511" /><Key frame="159" value="-77.2592" /><Key frame="177" value="-18.7233" /><Key frame="193" value="-51.5948" /><Key frame="210" value="-11.7799" /><Key frame="227" value="-20.7449" /><Key frame="244" value="-23.8211" /><Key frame="259" value="-20.1296" /><Key frame="276" value="-21.2722" /><Key frame="299" value="-7.03374" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="12" value="-10.7" /><Key frame="21" value="-7" /><Key frame="34" value="-6.85796" /><Key frame="65" value="-6.85796" /><Key frame="92" value="-7.4732" /><Key frame="126" value="-7.91266" /><Key frame="143" value="-8.00055" /><Key frame="177" value="-8.35212" /><Key frame="210" value="-12.9225" /><Key frame="227" value="37.9668" /><Key frame="244" value="30.3202" /><Key frame="276" value="5.00743" /><Key frame="299" value="9.22623" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Kisses" id="12" localization="8" tooltip="ID : #02A 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Kisses" x="506" y="629"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="127"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="26" value="-18.3718" /><Key frame="43" value="-21.0085" /><Key frame="56" value="-21.0085" /><Key frame="80" value="-17" /><Key frame="105" value="-22.9421" /><Key frame="127" value="-14.0651" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="26" value="-4.3091" /><Key frame="43" value="-1.84813" /><Key frame="56" value="-1.84813" /><Key frame="80" value="-1.84813" /><Key frame="105" value="-2.02391" /><Key frame="127" value="-2.11181" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="41" value="-27.4001" /><Key frame="56" value="-27.4001" /><Key frame="76" value="-2.83052" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="41" value="0" /><Key frame="56" value="0" /><Key frame="76" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="41" value="10.2097" /><Key frame="56" value="10.2097" /><Key frame="76" value="-0.792584" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="24" value="-30.6718" /><Key frame="41" value="-89.2077" /><Key frame="54" value="-89.2077" /><Key frame="78" value="-44.9982" /><Key frame="103" value="-28.6503" /><Key frame="125" value="-21.619" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="24" value="-110.746" /><Key frame="41" value="-50.2765" /><Key frame="54" value="-50.2765" /><Key frame="78" value="-101.517" /><Key frame="103" value="-109.691" /><Key frame="125" value="-65.4817" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="41" value="0.702933" /><Key frame="54" value="0.702933" /><Key frame="78" value="0.8" /><Key frame="103" value="0.676387" /><Key frame="125" value="0.109844" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="24" value="49.4806" /><Key frame="41" value="10.7204" /><Key frame="54" value="10.7204" /><Key frame="78" value="54.7541" /><Key frame="103" value="80.067" /><Key frame="125" value="84.8131" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="24" value="1.75543" /><Key frame="41" value="0.876513" /><Key frame="54" value="0.876513" /><Key frame="78" value="52.3811" /><Key frame="103" value="33.6601" /><Key frame="125" value="3.86483" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="41" value="-64.427" /><Key frame="54" value="-64.427" /><Key frame="78" value="-88" /><Key frame="103" value="-64.8665" /><Key frame="125" value="-8.00055" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="22" value="30.2372" /><Key frame="39" value="89.5017" /><Key frame="52" value="89.5017" /><Key frame="76" value="41.0478" /><Key frame="101" value="23.9968" /><Key frame="123" value="25.0515" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="22" value="119.496" /><Key frame="39" value="38.8457" /><Key frame="52" value="38.8457" /><Key frame="76" value="111.181" /><Key frame="101" value="119.442" /><Key frame="123" value="86.5709" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="39" value="0.758933" /><Key frame="52" value="0.758933" /><Key frame="76" value="0.909091" /><Key frame="101" value="0.730569" /><Key frame="123" value="0.22548" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="22" value="57.923" /><Key frame="39" value="1.76024" /><Key frame="52" value="1.76024" /><Key frame="76" value="63.3723" /><Key frame="101" value="80.0718" /><Key frame="123" value="88.0699" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="22" value="-9.84628" /><Key frame="39" value="-6.24272" /><Key frame="52" value="-6.24272" /><Key frame="76" value="-48.6944" /><Key frame="101" value="-37.2685" /><Key frame="123" value="-2.46337" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="39" value="56.9514" /><Key frame="52" value="56.9514" /><Key frame="76" value="80" /><Key frame="101" value="56.8635" /><Key frame="123" value="0.173379" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Data_Responses" id="14" localization="8" tooltip="" x="79" y="486"><dialogFile>../Data_Responses/Data_Responses.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Conversation" id="3" localization="8" tooltip="" x="200" y="556"><dialogFile>../Conversation/Conversation.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Show App" id="6" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="202" y="117"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)
        self.memory = ALProxy("ALMemory")
        self.prefmanager = ALProxy("ALPreferenceManager")

    def onLoad(self):
        self.isRunning = False
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAppName(self):
        import os
        if self.frameManager:
            #BehvaiorPath BP: grabs the absolute path and normalizes it
            behaviorPath = os.path.normpath(self.frameManager.getBehaviorPath(self.behaviorId))
            self.memory.raiseEvent("app/html_path", behaviorPath)
            self.logger.info("this is behaviour path being inserted into ALMemory" + behaviorPath)
            #BP: checks if the directory is valid
            if os.path.isdir(behaviorPath):
               behaviorPath = os.path.join(behaviorPath, "")
            #BP: creates path PackageManager/apps which we can use to grab part of path that we want
            appsFolderFragment = os.path.join("PackageManager", "apps")
            if not (appsFolderFragment in behaviorPath):
                    self.logger.error("appsFolderFragment is not in behaviorPath")
                    return None
            #BP splits path via PackageManager/apps and grabs the second half which is our desired path
            fragment = behaviorPath.split(appsFolderFragment, 1)[1]
            fragment = fragment.split("/")[1]
            return fragment.lstrip("\\/")
        else:
            self.logger.warning("No ALFrameManager")
            return None

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True

        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        #Check to see if PepperID is registered
        #appName = self._getAppName()+"/"+self.getParameter("HTML")
        pep_id = self.prefmanager.getValue("telepresence.DASK", "pepper_id2")
        if pep_id is None:
            self.logger.info("There is no PepperID registered = " + str(pep_id))
            html = 'register.html'
        else:
            self.logger.info("There is a PepperID registerd = " + str(pep_id))
            html = 'login.html'

        appName = self._getAppName()+"/"+ html
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()

    def onInput_login(self, html):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        self.inputTest(html)
        self.logger.info("Attempting to set application: %s" % html)
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        appName = self._getAppName()+"/"+ html
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="login" type="3" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="4" /><Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="5" /><Output name="inputTest" type="3" type_size="1" nature="2" inner="0" tooltip="" id="6" /><Parameter name="HTML" inherits_from_parent="0" content_type="3" value="index.html" default_value="" custom_choice="0" tooltip="" id="7" /></Box><Box name="Raise Event" id="9" localization="8" tooltip="Stores in NAOqi&apos;s shared memory the given value at the given key, and spreads the event to all its subscribers." x="365" y="147"><bitmap>media/images/box/sensors/STM.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        self.memory = None

    def onInput_onStart(self):
        #start initiate all events
        #sign up events
        self.memory.raiseEvent("app/signup_password", "admin")
        self.memory.raiseEvent("app/signup_firstname", "David")
        self.memory.raiseEvent("app/signup_lastname", "Pham")
        self.memory.raiseEvent("app/signup_email", "default@sfu.ca")
        self.memory.raiseEvent("app/signup_username", "admin")
        self.memory.raiseEvent("app/signup_password", "admin")
        self.memory.raiseEvent("app/html_page", "index")
        #login events
        self.memory.raiseEvent("app/username", "admin")
        self.memory.raiseEvent("app/password", "admin")
        #user feedback events
        self.memory.raiseEvent("app/login_status", "bad")
        self.memory.raiseEvent("app/signup_status", "default")
        #path info
        self.memory.raiseEvent("app/html_path", "/home/nao/.local/share/PackageManager/apps/.lastUploadedChoregrapheBehavior/behavior_1/")
        #PepperSecurityKey
        self.memory.raiseEvent("app/pepper_security_key", "42")

        #Deauthorize
        self.memory.raiseEvent("app/deauth_user", "none")

        #Currently authorized
        self.memory.raiseEvent("app/currently_authorized_request", "none")
        self.memory.raiseEvent("app/authroized_users", "none")

        #Photos
        self.memory.raiseEvent('app/photo_received', '1')




        #CurrentPepperID
        self.memory.raiseEvent("app/current_pepper_id", "salt")

        #To get new auth Requests from Cloud Server
        self.memory.raiseEvent("app/new_auth_requests", "default")
        #Tablet receives requests
        self.memory.raiseEvent("app/tablet_new_auth_request", "string")
        #request process
        self.memory.raiseEvent("app/auth_username_reply", "accept")
        self.memory.raiseEvent("app/auth_reply", "accept")

        ###################### HANGMAN GAME EVENTS ##############################################
        #Annoying messages to Android user
        self.memory.raiseEvent("app/annoy_android", "dance")

        #Incoming game request
        self.memory.raiseEvent("app/incoming_game_request", "0")

        #Game info to be sent to android
        #self.memory.raiseEvent("app/hangman_android_hint", "hint")
        #self.memory.raiseEvent("app/hangman_android_word", "word")
        self.memory.raiseEvent("app/hangman_android_user", "wall-ee")
        self.memory.raiseEvent("app/hangman_start_game", "nope")

        #store android_user's game stats
        self.memory.raiseEvent("app/hangman_android_user_lives" , "none")
        self.memory.raiseEvent("app/hangman_android_user_time", "none")

        #to track pepper's game info
        self.memory.raiseEvent("app/hangman_hint_for_pepper", "best song ever")
        self.memory.raiseEvent("app/hangman_word_for_pepper", "say my name")
        self.memory.raiseEvent("app/hangman_pepper_lives", "6")

        #Initiate game events!
        self.memory.raiseEvent("app/hangman_initiate", "start")
        self.memory.raiseEvent("app/deny_game_request", "1")

        #Check to see whether android game status
        self.memory.raiseEvent("app/hangman_android_check_status", "none")
        self.memory.raiseEvent("app/hangman_android_finish_status", "none")
        #Sends final results
        self.memory.raiseEvent("app/hangman_android_final_result", "none")
        #Sends victory status to android
        self.memory.raiseEvent("app/hangman_victory", "none")





        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Receives the value to be inserted as an event in ALMemory." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished. It contains the inserted value in ALMemory." id="4" /><Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="Output when error is raised by the behavior. Contains the error message." id="5" /><Parameter name="key" inherits_from_parent="0" content_type="3" value="app/username" default_value="MyApplication/MyData" custom_choice="0" tooltip="" id="6" /></Box><Box name="Game_Animation" id="10" localization="8" tooltip="" x="106" y="400"><dialogFile>../Game_Animation/Game_Animation.dlg</dialogFile><bitmap>media/images/box/box-dialog.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Output name="discoAction" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" /><Output name="headbang" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" /><Output name="elephant" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" /><Output name="ticktock" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" /><Output name="deathwoo" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" /><Output name="lovesong" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" /></Box><Box name="Tick Tock Sound" id="13" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="681" y="416"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../ticktock.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="Elephant" id="15" localization="8" tooltip="ID : #04A 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Elephant" x="644" y="536"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="180"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="130" y="43"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/elephant.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="32" value="36.5" /><Key frame="59" value="8.55243" /><Key frame="94" value="36.5" /><Key frame="121" value="8.55243" /><Key frame="154" value="36.5" /><Key frame="180" value="-11.9531" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="32" value="-21.4" /><Key frame="59" value="-21.2458" /><Key frame="94" value="-21.4" /><Key frame="121" value="-21.2458" /><Key frame="154" value="-21.4" /><Key frame="180" value="-0.263673" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="25" value="-53.923" /><Key frame="52" value="-2.33683" /><Key frame="87" value="-53.923" /><Key frame="114" value="-2.33683" /><Key frame="147" value="-53.923" /><Key frame="180" value="-2.02149" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="25" value="-0.125087" /><Key frame="52" value="-0.125087" /><Key frame="87" value="-0.125087" /><Key frame="114" value="-0.125087" /><Key frame="147" value="-0.125087" /><Key frame="180" value="-0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="25" value="20.2351" /><Key frame="52" value="-0.183079" /><Key frame="87" value="20.2351" /><Key frame="114" value="-0.183079" /><Key frame="147" value="20.2351" /><Key frame="180" value="-0.439454" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="32" value="-89.5" /><Key frame="59" value="-88.6599" /><Key frame="94" value="-89.5" /><Key frame="121" value="-88.6599" /><Key frame="154" value="-89.5" /><Key frame="180" value="-29.5313" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="32" value="0" /><Key frame="59" value="1.60444" /><Key frame="94" value="0" /><Key frame="121" value="1.60444" /><Key frame="154" value="0" /><Key frame="180" value="-70.9277" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="32" value="0.602755" /><Key frame="59" value="0.602755" /><Key frame="94" value="0.602755" /><Key frame="121" value="0.602755" /><Key frame="154" value="0.602755" /><Key frame="180" value="0.589631" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="32" value="-23.1" /><Key frame="59" value="-37.4943" /><Key frame="94" value="-23.1" /><Key frame="121" value="-37.4943" /><Key frame="154" value="-23.1" /><Key frame="180" value="89.209" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="32" value="8.00403" /><Key frame="59" value="8.88428" /><Key frame="94" value="8.00403" /><Key frame="121" value="8.88428" /><Key frame="154" value="8.00403" /><Key frame="180" value="7.29493" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="32" value="0" /><Key frame="59" value="0" /><Key frame="94" value="0" /><Key frame="121" value="0" /><Key frame="154" value="0" /><Key frame="180" value="0.612832" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="32" value="30.6" /><Key frame="46" value="0.5" /><Key frame="72" value="50.6986" /><Key frame="94" value="30.6" /><Key frame="108" value="0.5" /><Key frame="134" value="50.6986" /><Key frame="154" value="30.6" /><Key frame="180" value="30.3223" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="32" value="70.8345" /><Key frame="59" value="71.103" /><Key frame="94" value="70.8345" /><Key frame="121" value="71.103" /><Key frame="154" value="70.8345" /><Key frame="180" value="70.752" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="45" value="0.602465" /><Key frame="72" value="0.98" /><Key frame="107" value="0.602465" /><Key frame="134" value="0.98" /><Key frame="180" value="0.599297" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="32" value="30.4" /><Key frame="59" value="-28.9992" /><Key frame="94" value="30.4" /><Key frame="121" value="-28.9992" /><Key frame="154" value="30.4" /><Key frame="180" value="89.0332" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="32" value="-0.5" /><Key frame="59" value="-2.19889" /><Key frame="94" value="-0.5" /><Key frame="121" value="-2.19889" /><Key frame="154" value="-0.5" /><Key frame="180" value="-7.73437" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="32" value="-73" /><Key frame="59" value="-72.8936" /><Key frame="94" value="-73" /><Key frame="121" value="-72.8936" /><Key frame="154" value="-73" /><Key frame="180" value="-1.145" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="DeathWoo Sound" id="17" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="667" y="294"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../deathwoo.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="16" indexofinput="2" outputowner="7" indexofoutput="5" /><Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="6" /><Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="7" /><Link inputowner="5" indexofinput="2" outputowner="7" indexofoutput="8" /><Link inputowner="8" indexofinput="2" outputowner="7" indexofoutput="9" /><Link inputowner="11" indexofinput="2" outputowner="7" indexofoutput="10" /><Link inputowner="12" indexofinput="2" outputowner="11" indexofoutput="4" /><Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="4" outputowner="9" indexofoutput="4" /><Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="16" indexofinput="2" outputowner="10" indexofoutput="5" /><Link inputowner="5" indexofinput="2" outputowner="10" indexofoutput="5" /><Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="6" /><Link inputowner="15" indexofinput="2" outputowner="10" indexofoutput="7" /><Link inputowner="13" indexofinput="2" outputowner="10" indexofoutput="8" /><Link inputowner="8" indexofinput="2" outputowner="10" indexofoutput="10" /><Link inputowner="17" indexofinput="2" outputowner="10" indexofoutput="9" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>